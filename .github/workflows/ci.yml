name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  release:
    types: [ published ]

jobs:
  # ===== 代碼品質檢查 =====
  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: TypeScript type check
      run: npm run type-check
      
    - name: ESLint check
      run: npm run lint
      
    - name: Prettier format check
      run: npm run format:check

  # ===== 測試 =====
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16, 18, 20]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm run test:ci
      
    - name: Upload coverage to Codecov
      if: matrix.node-version == 18
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  # ===== 構建測試 =====
  build:
    name: Build Test
    runs-on: ubuntu-latest
    needs: [quality, test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build package
      run: npm run build
      
    - name: Check bundle size
      run: npm run size
      
    - name: Test package installation
      run: |
        npm pack
        mkdir test-install
        cd test-install
        npm init -y
        npm install ../tsstorex-*.tgz
        node -e "const pkg = require('@tsstorex/core'); console.log('Package loads successfully');"

  # ===== 跨平台測試 =====
  cross-platform:
    name: Cross Platform Test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    runs-on: ${{ matrix.os }}
    needs: [quality]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run core tests
      run: npm test -- --testPathPattern="core"

  # ===== 瀏覽器相容性測試 =====
  browser-test:
    name: Browser Compatibility
    runs-on: ubuntu-latest
    needs: [build]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build package
      run: npm run build
      
    - name: Setup Playwright
      run: npx playwright install --with-deps
      
    - name: Run browser tests
      run: |
        # 這裡可以添加瀏覽器測試腳本
        echo "Browser tests would run here"

  # ===== 效能基準測試 =====
  benchmark:
    name: Performance Benchmark
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build package
      run: npm run build
      
    - name: Run benchmarks
      run: |
        # 效能基準測試腳本
        echo "Performance benchmarks would run here"
        # npm run benchmark

  # ===== 安全掃描 =====
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level moderate
      
    - name: Run CodeQL Analysis
      uses: github/codeql-action/init@v2
      with:
        languages: typescript
        
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

  # ===== 發布到 NPM =====
  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: [quality, test, build, cross-platform]
    if: github.event_name == 'release' && github.event.action == 'published'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build package
      run: npm run build
      
    - name: Publish to NPM
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Create GitHub Release Assets
      run: |
        npm pack
        mv tsstorex-*.tgz tsstorex-${{ github.event.release.tag_name }}.tgz
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./tsstorex-${{ github.event.release.tag_name }}.tgz
        asset_name: tsstorex-${{ github.event.release.tag_name }}.tgz
        asset_content_type: application/gzip

  # ===== 文檔部署 =====
  docs:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build documentation
      run: npm run docs:build
      
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/.vitepress/dist